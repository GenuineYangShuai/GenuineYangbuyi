<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yby.sys.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.yby.sys.domain.Role">
        <id column="roleid" jdbcType="INTEGER" property="roleid"/>
        <result column="rolename" jdbcType="VARCHAR" property="rolename"/>
        <result column="roledesc" jdbcType="VARCHAR" property="roledesc"/>
        <result column="available" jdbcType="INTEGER" property="available"/>
    </resultMap>
    <sql id="Base_Column_List">
    roleid, rolename, roledesc, available
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where roleid = #{roleid,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.yby.sys.domain.Role">
    insert into sys_role (roleid, rolename, roledesc, 
      available)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR}, 
      #{available,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.yby.sys.domain.Role">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleid != null">
                roleid,
            </if>
            <if test="rolename != null">
                rolename,
            </if>
            <if test="roledesc != null">
                roledesc,
            </if>
            <if test="available != null">
                available,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleid != null">
                #{roleid,jdbcType=INTEGER},
            </if>
            <if test="rolename != null">
                #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="roledesc != null">
                #{roledesc,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                #{available,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yby.sys.domain.Role">
        update sys_role
        <set>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="roledesc != null">
                roledesc = #{roledesc,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
        </set>
        where roleid = #{roleid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yby.sys.domain.Role">
    update sys_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      roledesc = #{roledesc,jdbcType=VARCHAR},
      available = #{available,jdbcType=INTEGER}
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
    <!-- 查询角色 -->
    <select id="queryAllRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        <where>
            <if test="rolename != null and rolename != ''">
                and rolename like concat("%",#{rolename},"%")
            </if>
            <if test="roledesc != null and roledesc != ''">
                and roledesc like concat("%",#{roledesc},"%")
            </if>
            <if test="available != null and rolename != ''">
                and available = #{available}
            </if>
        </where>
    </select>
    <!-- 删除角色表数据 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where roleid = #{roleid,jdbcType=INTEGER}
  </delete>
    <!-- 根据角色id删除sys_role_menu当中的数据 -->
    <delete id="deleteRoleMenuByRid">
          delete from sys_role_menu where rid = #{roleId}
    </delete>
    <!-- 删除sys_role_user当中的数据 -->
    <delete id="deleteRoleUserByUid">
        delete from sys_role_user where uid = #{uid}
    </delete>
    <!-- 保存角色id 和 菜单 id 的关系 -->
    <insert id="saveRoleMenu">
        insert into sys_role_menu
        (rid,mid)
         values
         (#{rid},#{mid})
    </insert>
    <!-- 根据用户id查询已拥有的角色 -->
    <select id="queryRoleByUid" resultMap="BaseResultMap">
        select
        distinct  t1.*
        from sys_role t1
        INNER JOIN
        sys_role_user t2
        on t1.roleid = t2.rid
        where t2.uid = #{userid}
    </select>


    <resultMap id="BasequeryPermissionRole" type="com.yby.sys.utils.DataXSelect">
        <id column="roleid" jdbcType="INTEGER" property="value"/>
        <result column="rolename" jdbcType="VARCHAR" property="name"/>
    </resultMap>

    <select id="queryPermissionRole" resultMap="BasequeryPermissionRole">
        select
        roleid,rolename
        from sys_role
    </select>

    <select id="queryPermissionRoleUid" resultMap="BasequeryPermissionRole">
         select DISTINCT t3.roleid as roleid,t3.rolename as rolename FROM
            sys_role_permission t2
            INNER JOIN
            sys_role t3
            ON(t2.rid = t3.roleid) where t2.pid = #{pid}
    </select>

    <!--
    封装根据用户id查询的角色
    -->
    <resultMap id="basequeryRoleByUids" type="com.yby.sys.utils.DataXSelect">
        <id column="roleid" jdbcType="INTEGER" property="value"/>
        <result column="rolename" jdbcType="VARCHAR" property="name"/>
    </resultMap>
    <select id="queryRoleByUids" resultMap="basequeryRoleByUids">
         select
        distinct  t1.*
        from sys_role t1
        INNER JOIN
        sys_role_user t2
        on t1.roleid = t2.rid
        where t2.uid = #{userid}
    </select>

</mapper>